<?php

namespace Database\Factories;

use App\Models\GeneratedPage;
use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\GeneratedPage>
 */
class GeneratedPageFactory extends Factory
{
    /**
     * The name of the factory's corresponding model.
     *
     * @var class-string<\App\Models\GeneratedPage>
     */
    protected $model = GeneratedPage::class;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'user_id' => User::factory(),
            'title' => $this->faker->sentence(3),
            'description' => $this->faker->optional()->sentence(),
            'prompt' => $this->faker->paragraph(),
            'generated_html' => $this->generateSampleHTML(),
            'generated_css' => $this->generateSampleCSS(),
            'template_style' => $this->faker->randomElement(['modern', 'classic', 'minimal', 'creative', 'business']),
            'status' => 'completed',
            'metadata' => [
                'generation_time' => $this->faker->numberBetween(5, 30),
                'word_count' => $this->faker->numberBetween(100, 1000),
            ],
        ];
    }

    /**
     * Indicate that the page is still generating.
     */
    public function generating(): static
    {
        return $this->state(fn (array $attributes) => [
            'status' => 'generating',
            'generated_html' => '',
            'generated_css' => '',
        ]);
    }

    /**
     * Indicate that the page generation failed.
     */
    public function failed(): static
    {
        return $this->state(fn (array $attributes) => [
            'status' => 'failed',
            'generated_html' => '',
            'generated_css' => '',
        ]);
    }

    /**
     * Generate sample HTML content.
     *
     * @return string
     */
    protected function generateSampleHTML(): string
    {
        return '<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>' . $this->faker->sentence(3) . '</title>
</head>
<body>
    <header>
        <h1>' . $this->faker->sentence(3) . '</h1>
        <p>' . $this->faker->sentence() . '</p>
    </header>
    <main>
        <section>
            <h2>' . $this->faker->sentence(2) . '</h2>
            <p>' . $this->faker->paragraph() . '</p>
        </section>
    </main>
    <footer>
        <p>&copy; ' . date('Y') . ' Generated by BuatLaman AI</p>
    </footer>
</body>
</html>';
    }

    /**
     * Generate sample CSS content.
     *
     * @return string
     */
    protected function generateSampleCSS(): string
    {
        return 'body { font-family: Arial, sans-serif; margin: 0; padding: 20px; }
header { text-align: center; margin-bottom: 2rem; }
h1 { color: #333; }
section { margin-bottom: 2rem; }
footer { text-align: center; color: #666; }';
    }
}